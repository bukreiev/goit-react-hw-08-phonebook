{"version":3,"file":"static/js/710.609d8a89.chunk.js","mappings":"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","sources":["hooks/useContactForm.js","hooks/useSnackbar.js","components/ContactForm/ContactForm.jsx","components/StyledTableCell/StyledTableCell.jsx","components/StyledTableRow/StyledTableRow.jsx","components/ContactModal/ContactModal.jsx","components/ContactsTableItem/ContactsTableItem.jsx","components/ContactsTable/ContactsTable.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useState, useId } from 'react';\n\nexport default function useContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const id = useId();\n  const [openModal, setOpenModal] = useState(false);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return {\n    name,\n    setName,\n    number,\n    setNumber,\n    id,\n    openModal,\n    setOpenModal,\n    handleInputChange,\n    resetForm,\n  };\n}\n","import { useState } from 'react';\n\nexport default function useSnackbar() {\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbar(prevState => {\n      return {\n        ...prevState,\n        open: false,\n      };\n    });\n  };\n\n  const setMessage = message =>\n    setSnackbar(prevState => {\n      return {\n        open: true,\n        message: message,\n      };\n    });\n\n  return {\n    open: snackbar.open,\n    message: snackbar.message,\n    setMessage,\n    handleClose,\n  };\n}\n","import useContactForm from 'hooks/useContactForm';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { Box, TextField, Snackbar } from '@mui/material';\nimport useSnackbar from 'hooks/useSnackbar';\nimport AddIcon from '@mui/icons-material/Add';\nimport {\n  usePostContactMutation,\n  useGetAllContactsQuery,\n} from 'service/contactsApi';\nimport { useEffect } from 'react';\n\nexport default function ContactForm() {\n  const { name, number, id, handleInputChange, resetForm } = useContactForm();\n  const { open, message, setMessage, handleClose } = useSnackbar();\n  const { data: contacts } = useGetAllContactsQuery();\n  const [postContact, { isLoading, isSuccess, reset }] =\n    usePostContactMutation();\n\n  useEffect(() => {\n    if (isSuccess && name !== '') {\n      setMessage(`${name} is successfully added to Contacts List!`);\n      resetForm();\n      reset();\n    }\n  }, [isSuccess, name, resetForm, setMessage, reset]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (\n      contacts?.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return setMessage(`${name} is already in Contacts List!`);\n    }\n    if (name === '' && number === '') {\n      return setMessage('Please enter values into Name and Number fields!');\n    }\n    postContact({ name, number });\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        autoComplete=\"on\"\n        onSubmit={handleSubmit}\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexDirection: { xs: 'column', md: 'row' },\n          gap: { xs: '10px', md: '20px' },\n          alignItems: { xs: 'normal', md: 'flex-end' },\n          marginBottom: '30px',\n        }}\n      >\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={id + 'name'}\n          label=\"Full Name\"\n          name=\"name\"\n          type=\"text\"\n          variant=\"standard\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"John Smith\"\n          onChange={handleInputChange}\n          value={name}\n        />\n        <TextField\n          margin=\"dense\"\n          id={id + 'number'}\n          label=\"Phone Number\"\n          name=\"number\"\n          type=\"tel\"\n          variant=\"standard\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"050-123-23-23\"\n          onChange={handleInputChange}\n          value={number}\n        />\n        <LoadingButton\n          sx={{ display: { xs: 'none', md: 'flex' } }}\n          startIcon={<AddIcon />}\n          type=\"submit\"\n          onClick={handleSubmit}\n          name=\"submit_button\"\n          variant=\"contained\"\n          loading={isLoading}\n        >\n          Add contact\n        </LoadingButton>\n        <LoadingButton\n          sx={{ display: { xs: 'block', md: 'none' }, lineHeight: '0' }}\n          type=\"submit\"\n          onClick={handleSubmit}\n          name=\"Add Contact\"\n          aria-label=\"Add Contact\"\n          variant=\"contained\"\n          loading={isLoading}\n        >\n          <AddIcon />\n        </LoadingButton>\n      </Box>\n      <Snackbar\n        autoHideDuration={3000}\n        open={open}\n        onClose={handleClose}\n        message={message}\n      />\n    </>\n  );\n}\n","import TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport { styled } from '@mui/material/styles';\n\nconst StyledTableCell = styled(TableCell)(({ theme }) => ({\n  [`&.${tableCellClasses.head}`]: {\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.common.white,\n  },\n  [`&.${tableCellClasses.body}`]: {\n    fontSize: 14,\n  },\n}));\n\nexport default StyledTableCell;\n","import { styled } from '@mui/material/styles';\nimport TableRow from '@mui/material/TableRow';\n\nconst StyledTableRow = styled(TableRow)(({ theme }) => ({\n  '&:nth-of-type(odd)': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  '&:last-child td, &:last-child th': {\n    border: 0,\n  },\n}));\n\nexport default StyledTableRow;\n","import { useEffect } from 'react';\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Snackbar,\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport useContactForm from '../../hooks/useContactForm';\nimport useSnackbar from '../../hooks/useSnackbar';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {\n  useEditContactByIdMutation,\n  useGetAllContactsQuery,\n} from '../../service/contactsApi';\nimport PropTypes from 'prop-types';\n\nexport default function ContactModal({ contactObj, openModal, setOpenModal }) {\n  const { name, setName, number, setNumber, id, handleInputChange, resetForm } =\n    useContactForm();\n  const { data: contacts } = useGetAllContactsQuery();\n  const { open, message, setMessage, handleClose } = useSnackbar();\n  const [editContact, { isLoading, isSuccess, reset }] =\n    useEditContactByIdMutation();\n\n  useEffect(() => {\n    setName(contactObj.name);\n    setNumber(contactObj.number);\n    console.log(contactObj);\n  }, [contactObj, setName, setNumber]);\n\n  useEffect(() => {\n    if (isSuccess && name !== '') {\n      setMessage(`Contact ${name} information is successfully changed!`);\n      resetForm();\n      reset();\n      setOpenModal(false);\n    }\n  }, [isSuccess, name, resetForm, setMessage, setOpenModal, reset]);\n\n  const handleModalClose = event => {\n    if (event.target.name !== 'edit') {\n      setOpenModal(false);\n      resetForm();\n      return;\n    }\n    if (\n      name.toLowerCase() === contactObj.name.toLowerCase() &&\n      number === contactObj.number\n    ) {\n      return setMessage(\n        `Please make changes to contactObj ${name} information or press Cancel to exit Edit Contact dialog.`\n      );\n    }\n    if (\n      contacts?.find(\n        contactObj => contactObj.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return setMessage(`${name} is already in Contacts List!`);\n    }\n    if (name === '' && number === '') {\n      return setMessage('Please enter values into Name and Number fields!');\n    }\n    editContact({ id: contactObj.id, name, number });\n  };\n\n  return (\n    <>\n      {name && (\n        <Dialog open={openModal} onClose={handleModalClose}>\n          <DialogTitle>Contact Information</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id={id + 'name'}\n              label=\"Full Name\"\n              name=\"name\"\n              type=\"text\"\n              fullWidth\n              variant=\"standard\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"John Smith\"\n              onChange={handleInputChange}\n              value={name}\n            />\n            <TextField\n              margin=\"dense\"\n              id={id + 'number'}\n              label=\"Phone Number\"\n              name=\"number\"\n              type=\"tel\"\n              fullWidth\n              variant=\"standard\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"050-123-23-23\"\n              onChange={handleInputChange}\n              value={number}\n            />\n          </DialogContent>\n          <DialogActions>\n            <LoadingButton\n              startIcon={<EditIcon />}\n              onClick={handleModalClose}\n              name=\"edit\"\n              variant=\"contained\"\n              loading={isLoading}\n            >\n              Edit\n            </LoadingButton>\n            <Button onClick={handleModalClose} variant=\"contained\">\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n      <Snackbar\n        autoHideDuration={1000}\n        open={open}\n        onClose={handleClose}\n        message={message}\n      />\n    </>\n  );\n}\n\nContactModal.propTypes = {\n  contactObj: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  openModal: PropTypes.bool.isRequired,\n  setOpenModal: PropTypes.func.isRequired,\n};\n","import { Button, ButtonGroup, TableCell, Typography } from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { useDeleteContactByIdMutation } from 'service/contactsApi';\nimport PropTypes from 'prop-types';\n\nexport default function ContactsTableItem({\n  contact,\n  handleEdit,\n  handleDelete,\n}) {\n  const [, { isLoading }] = useDeleteContactByIdMutation();\n\n  return (\n    <>\n      <TableCell component=\"th\" scope=\"row\">\n        <Typography>{contact.name}</Typography>\n      </TableCell>\n      <TableCell>\n        <Typography>{contact.number}</Typography>\n      </TableCell>\n      <TableCell align=\"right\">\n        <ButtonGroup\n          variant=\"contained\"\n          aria-label=\"edit/delete contact button group\"\n        >\n          <Button\n            startIcon={<EditIcon />}\n            onClick={() => handleEdit(contact)}\n            variant=\"outlined\"\n          >\n            Edit\n          </Button>\n          <LoadingButton\n            startIcon={<DeleteIcon />}\n            onClick={() => handleDelete(contact.id, contact.name)}\n            variant=\"contained\"\n            loading={isLoading}\n          >\n            Delete\n          </LoadingButton>\n        </ButtonGroup>\n      </TableCell>\n    </>\n  );\n}\n\nContactsTableItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  handleEdit: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { filterSelector } from 'redux/filter';\nimport {\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TablePagination,\n  Paper,\n  Snackbar,\n  List,\n  ListItem,\n  ListItemText,\n  Pagination,\n  ButtonGroup,\n  Button,\n  Box,\n} from '@mui/material';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport StyledTableCell from 'components/StyledTableCell';\nimport StyledTableRow from 'components/StyledTableRow';\nimport useSnackbar from 'hooks/useSnackbar';\nimport useContactForm from 'hooks/useContactForm';\nimport ContactModal from 'components/ContactModal';\nimport ContactsTableItem from 'components/ContactsTableItem';\nimport {\n  useGetAllContactsQuery,\n  useDeleteContactByIdMutation,\n} from 'service/contactsApi';\n\nexport default function ContactsTable() {\n  const [page, setPage] = useState(0);\n  const [listPage, setListPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [contact, setContact] = useState({});\n  const [deletedContact, setDeletedContact] = useState('');\n  const filter = useSelector(filterSelector);\n  const { data = [] } = useGetAllContactsQuery();\n  const filteredContactsList = data\n    .filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n    .sort((a, b) => a.name.localeCompare(b.name));\n  console.log(filteredContactsList);\n  const { open, message, setMessage, handleClose } = useSnackbar();\n  const { openModal, setOpenModal } = useContactForm();\n  const [deleteContact, { isLoading, isSuccess, reset }] =\n    useDeleteContactByIdMutation();\n\n  useEffect(() => {\n    if (isSuccess && deletedContact !== '') {\n      setMessage(`Contact ${deletedContact} is successfully deleted!`);\n      setDeletedContact('');\n      reset();\n    }\n  }, [isSuccess, setMessage, reset, setDeletedContact, deletedContact]);\n\n  const handleEdit = contact => {\n    setContact(contact);\n    setOpenModal(true);\n  };\n\n  const handleDelete = (contactId, contactName) => {\n    deleteContact(contactId);\n    setDeletedContact(contactName);\n    if (page > Math.floor(filteredContactsList.length / rowsPerPage) - 1) {\n      setPage(0);\n      return;\n    }\n    if (listPage > Math.floor(filteredContactsList.length / 10)) {\n      setListPage(Math.floor(filteredContactsList.length / 10));\n    }\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeListPage = (event, newPage) => {\n    setListPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <>\n      <TableContainer\n        component={Paper}\n        sx={{ display: { xs: 'none', md: 'block' } }}\n      >\n        <Table sx={{ minWidth: 480 }} aria-label=\"contacts table\" size=\"small\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Full Name</StyledTableCell>\n              <StyledTableCell>Phone Number</StyledTableCell>\n              <StyledTableCell align=\"right\">\n                Edit/Delete Contact\n              </StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredContactsList.map(item => (\n              <StyledTableRow key={item.id}>\n                <ContactsTableItem\n                  contact={item}\n                  handleEdit={handleEdit}\n                  handleDelete={handleDelete}\n                />\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25, 50]}\n        component=\"div\"\n        count={filteredContactsList.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n        sx={{ display: { xs: 'none', md: 'block' } }}\n      />\n      <List sx={{ display: { xs: 'block', md: 'none' } }}>\n        {filteredContactsList.map(item => (\n          <ListItem key={item.id}>\n            <ListItemText>\n              {item.name}: {item.number}\n            </ListItemText>\n            <ButtonGroup\n              variant=\"contained\"\n              aria-label=\"edit/delete contact button group\"\n            >\n              <Button\n                onClick={() => handleEdit(item)}\n                variant=\"outlined\"\n                aria-label=\"Edit Contact\"\n              >\n                <EditIcon />\n              </Button>\n              <LoadingButton\n                onClick={() => handleDelete(item.id, item.name)}\n                variant=\"contained\"\n                loading={isLoading}\n                aria-label=\"Delete Contact\"\n              >\n                <DeleteIcon />\n              </LoadingButton>\n            </ButtonGroup>\n          </ListItem>\n        ))}\n      </List>\n      <Box\n        my={2}\n        sx={{ display: { xs: 'flex', md: 'none' }, justifyContent: 'center' }}\n      >\n        <Pagination\n          count={Math.ceil(filteredContactsList.length / 10)}\n          page={listPage}\n          onChange={handleChangeListPage}\n        />\n      </Box>\n      <Snackbar\n        autoHideDuration={1000}\n        open={open}\n        onClose={handleClose}\n        message={message}\n      />\n      <ContactModal\n        contactObj={contact}\n        openModal={openModal}\n        setOpenModal={setOpenModal}\n      />\n    </>\n  );\n}\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterSelector } from 'redux/filter';\nimport { changeFilter } from 'redux/filter/filterSlice';\nimport { Typography, Box, TextField } from '@mui/material';\nimport debounce from 'lodash.debounce';\n\nexport default function Filter() {\n  const filter = useSelector(filterSelector);\n  const dispatch = useDispatch();\n\n  const debouncedFilter = debounce(text => dispatch(changeFilter(text)), 350);\n\n  const onChange = event => {\n    debouncedFilter(event.target.value);\n  };\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        gap: '10px',\n        textAlign: 'center',\n        marginBottom: '15px',\n      }}\n    >\n      <Typography>Find contact by name</Typography>\n      <TextField\n        variant=\"standard\"\n        type=\"text\"\n        name=\"filter\"\n        aria-label=\"Contacts Filter\"\n        role=\"textbox\"\n        onChange={onChange}\n        value={filter}\n      />\n    </Box>\n  );\n}\n","import ContactForm from 'components/ContactForm';\nimport ContactsTable from 'components/ContactsTable';\nimport { Typography, Box } from '@mui/material';\nimport Filter from 'components/Filter';\n\nexport default function ContactsPage() {\n  return (\n    <Box>\n      <Typography\n        variant=\"h4\"\n        component=\"h1\"\n        align=\"center\"\n        gutterBottom\n        mt={2}\n      >\n        Phonebook Contacts\n      </Typography>\n      <ContactForm />\n      <Filter />\n      <ContactsTable />\n    </Box>\n  );\n}\n"],"names":["useContactForm","useState","name","setName","number","setNumber","id","useId","openModal","setOpenModal","handleInputChange","event","target","value","resetForm","useSnackbar","open","message","snackbar","setSnackbar","setMessage","prevState","handleClose","reason","ContactForm","contacts","useGetAllContactsQuery","data","usePostContactMutation","postContact","isLoading","isSuccess","reset","useEffect","handleSubmit","preventDefault","find","contact","toLowerCase","Box","component","autoComplete","onSubmit","sx","display","justifyContent","flexDirection","xs","md","gap","alignItems","marginBottom","TextField","autoFocus","margin","label","type","variant","pattern","title","required","placeholder","onChange","LoadingButton","startIcon","Add","onClick","loading","lineHeight","Snackbar","autoHideDuration","onClose","styled","TableCell","theme","tableCellClasses","backgroundColor","palette","primary","dark","color","common","white","fontSize","TableRow","action","hover","border","ContactModal","contactObj","useEditContactByIdMutation","editContact","console","log","handleModalClose","Dialog","DialogTitle","DialogContent","fullWidth","DialogActions","Edit","Button","ContactsTableItem","handleEdit","handleDelete","useDeleteContactByIdMutation","scope","Typography","align","ButtonGroup","Delete","ContactsTable","page","setPage","listPage","setListPage","rowsPerPage","setRowsPerPage","setContact","deletedContact","setDeletedContact","filter","useSelector","filterSelector","filteredContactsList","includes","sort","a","b","localeCompare","deleteContact","contactId","contactName","Math","floor","length","TableContainer","Paper","Table","minWidth","size","TableHead","TableBody","map","item","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","List","ListItem","ListItemText","my","Pagination","ceil","Filter","dispatch","useDispatch","debouncedFilter","debounce","text","changeFilter","textAlign","role","ContactsPage","gutterBottom","mt"],"sourceRoot":""}